version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: records-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-records}
      POSTGRES_USER: ${DB_USER:-records_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - records-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-records_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Records Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: records-app
    environment:
      DATABASE_URL: postgresql://${DB_USER:-records_user}:${DB_PASSWORD:-change_this_password}@postgres:5432/${DB_NAME:-records}
      NODE_ENV: production
      PORT: 5000
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - records-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  records-network:
    driver: bridge
